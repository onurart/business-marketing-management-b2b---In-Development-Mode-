
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    function onShowing(e) {
        var btns = e.component.content().parent().find(".dx-button.dx-button-has-text");
        for (var i = 0; i < btns.length; i++) {
            var btn = btns[i];
            $(btn).dxButton("option", "text", i == 0 ? "Kaydet" : "Vazgeç");
        }
    }
</script>


@(Html.DevExtreme().DataGrid<TredeWeb.DataLayer.Orders>
    ()
    .DataSource(ds => ds.Mvc()
    .Controller("ApiOrders")
    .LoadAction("Get")
    .InsertAction("Post")
    .UpdateAction("Put")
    .DeleteAction("Delete")
    .Key("Id")
    )
    .ShowBorders(true)
            .ShowColumnLines(true)
            .HighlightChanges(true)
            .Paging(pagination => pagination
                .Enabled(true)
                .PageSize(5)
            )
            .RemoteOperations(true)
            .Editing(e => e
                .Mode(GridEditMode.Popup)
                    .Popup(pop => pop
                        .DragEnabled(false)
                        .OnShowing("onShowing")
                        .Position(PositionAlignment.Center)
                        .Width(700)
                        .Height(800)
                        .Title("Sipariş Formu").ShowTitle(true).ShowCloseButton(true).CloseOnOutsideClick(true)
                        )
                .Form(cnfg =>
                {
                    cnfg.Items(itm => itm
                        .AddGroup()
                        .ColCount(2)
                        .ColSpan(2)
                        .Caption("İlk grup")
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.SrcName);
                            groupItems.AddSimpleFor(m => m.OrderSessionId);
                            groupItems.AddSimpleFor(m => m.IsProcess);
                            groupItems.AddSimpleFor(m => m.ApproveDate);
                            groupItems.AddSimpleFor(m => m.BasketRef);
                            groupItems.AddSimpleFor(m => m.AccountRef);
                            groupItems.AddSimpleFor(m => m.Code);
                            groupItems.AddSimpleFor(m => m.Coupon);
                            groupItems.AddSimpleFor(m => m.FinanceRef);
                            groupItems.AddSimpleFor(m => m.DeliveryAddress);
                            groupItems.AddSimpleFor(m => m.DeliveryCompany);
                            groupItems.AddSimpleFor(m => m.Discount);
                            groupItems.AddSimpleFor(m => m.DiscountType);
                            groupItems.AddSimpleFor(m => m.OrderDiscount);
                            groupItems.AddSimpleFor(m => m.FicheTotal);
                        }));
                    cnfg.Items(itm => itm
                        .AddGroup()
                        .ColCount(2)
                        .ColSpan(2)
                        .Caption("İkinci grup")
                        .Items(groupItems =>
                        {

                            groupItems.AddSimpleFor(m => m.InvoiceAddress);
                            groupItems.AddSimpleFor(m => m.IsApproved);
                            groupItems.AddSimpleFor(m => m.IsCharged);
                            groupItems.AddSimpleFor(m => m.IsDiscount);
                            groupItems.AddSimpleFor(m => m.IsGiftPackage);
                            groupItems.AddSimpleFor(m => m.IsWholeSale);
                            groupItems.AddSimpleFor(m => m.Name);
                            groupItems.AddSimpleFor(m => m.OrderDate);
                            groupItems.AddSimpleFor(m => m.OrderNote);
                            groupItems.AddSimpleFor(m => m.OrderStatus);
                            groupItems.AddSimpleFor(m => m.OrderStyle);
                            groupItems.AddSimpleFor(m => m.OrderTotal);
                            groupItems.AddSimpleFor(m => m.OwnerRef);
                            groupItems.AddSimpleFor(m => m.PaymentType);
                            groupItems.AddSimpleFor(m => m.IsActive);
                            groupItems.AddSimpleFor(m => m.CreatedDate);
                        }));
                    cnfg.ShowValidationSummary(true);
                })
                .UseIcons(true)
                .ConfirmDelete(true)
                .AllowAdding(true)
                .AllowUpdating(true)
                .AllowDeleting(true)
            )
    .Columns(columns => {
        columns.AddFor(m => m.SrcName).Caption("Src Adı");

        columns.AddFor(m => m.OrderSessionId).Caption("Sipariş Oturum Kimliği");

        columns.AddFor(m => m.IsProcess).Caption("İşlem mi");

        columns.AddFor(m => m.ApproveDate).Caption("Onay Tarihi");

        columns.AddFor(m => m.BasketRef).Caption("Sepet Referansı");

        columns.AddFor(m => m.AccountRef).Caption("Hesap Referansı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiOrders").LoadAction("AccountsLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.Code).Caption("Kodu");

        columns.AddFor(m => m.Coupon).Caption("Kupon").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiOrders").LoadAction("CouponCodesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.FinanceRef).Caption("Kupon Referansı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiOrders").LoadAction("FnFichesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.DeliveryAddress).Caption("Teslimat Adresi");

        columns.AddFor(m => m.DeliveryCompany).Caption("Teslimat Şirketi");

        columns.AddFor(m => m.Discount).Caption("İndirim");

        columns.AddFor(m => m.DiscountType).Caption("İndirim Türü");

        columns.AddFor(m => m.OrderDiscount).Caption("Sipariş indirimi");

        columns.AddFor(m => m.FicheTotal).Caption("FişToplam");

        columns.AddFor(m => m.InvoiceAddress).Caption("Fatura adresi");

        columns.AddFor(m => m.IsApproved).Caption("Onaylandı");

        columns.AddFor(m => m.IsCharged).Caption("Ücretli");

        columns.AddFor(m => m.IsDiscount).Caption("İndirim mi");

        columns.AddFor(m => m.IsGiftPackage).Caption("Hediye Paketi");

        columns.AddFor(m => m.IsWholeSale).Caption("Toptan Satış");

        columns.AddFor(m => m.Name).Caption("Ad");

        columns.AddFor(m => m.OrderDate).Caption("Sipariş tarihi");

        columns.AddFor(m => m.OrderNote).Caption("Sipariş Notu");

        columns.AddFor(m => m.OrderStatus).Caption("Sipariş durumu");

        columns.AddFor(m => m.OrderStyle).Caption("Sipariş Stili");

        columns.AddFor(m => m.OrderTotal).Caption("Sipariş toplamı");

        columns.AddFor(m => m.OwnerRef).Caption("Sahip Ref").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiOrders").LoadAction("UsersLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.PaymentType).Caption("Ödeme türü").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiOrders").LoadAction("PaymentTypesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.IsActive).Caption("Aktif Mi");

        columns.AddFor(m => m.CreatedDate).Caption("Oluşturulma Tarihi");
    }))