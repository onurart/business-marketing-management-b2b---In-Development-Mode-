
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    function onShowing(e) {
        var btns = e.component.content().parent().find(".dx-button.dx-button-has-text");
        for (var i = 0; i < btns.length; i++) {
            var btn = btns[i];
            $(btn).dxButton("option", "text", i == 0 ? "Kaydet" : "Vazgeç");
        }
    }
</script>
@(Html.DevExtreme().DataGrid<TredeWeb.DataLayer.Addresses>
    ()
    .DataSource(ds => ds.Mvc()
    .Controller("ApiAddresses")
    .LoadAction("Get")
    .InsertAction("Post")
    .UpdateAction("Put")
    .DeleteAction("Delete")
    .Key("Id")
    )
    .ShowBorders(true)
    .ShowColumnLines(true)
    .HighlightChanges(true)
    .Paging(pagination => pagination
    .Enabled(true)
    .PageSize(5)
    )
    .RemoteOperations(true)
    .Editing(e => e
    .Mode(GridEditMode.Popup)
    .Popup(pop => pop
    .DragEnabled(false)
    .OnShowing("onShowing")
    .Position(PositionAlignment.Center)
    .Width(700)
    .Height(800)
    .Title("Adres Formu").ShowTitle(true).ShowCloseButton(true).CloseOnOutsideClick(true)
    )
    .Form(cnfg =>
    {
    cnfg.Items(itm => itm
    .AddGroup()
    .ColCount(2)
    .ColSpan(2)
    .Caption("İlk grup")
    .Items(groupItems =>
    {
    groupItems.AddSimpleFor(m => m.CityRef);
    groupItems.AddSimpleFor(m => m.CountryRef);
    groupItems.AddSimpleFor(m => m.DistrictName);
    groupItems.AddSimpleFor(m => m.AddressType);
    groupItems.AddSimpleFor(m => m.DistrictName);
    groupItems.AddSimpleFor(m => m.IsDefault);
    groupItems.AddSimpleFor(m => m.Number);
    groupItems.AddSimpleFor(m => m.OwnerRef);

    }));
    cnfg.Items(itm => itm
    .AddGroup()
    .ColCount(2)
    .ColSpan(2)
    .Caption("İkinci grup")
    .Items(groupItems =>
    {
    groupItems.AddSimpleFor(m => m.MainStreet);
    groupItems.AddSimpleFor(m => m.Street);
    groupItems.AddSimpleFor(m => m.PostCode);
    groupItems.AddSimpleFor(m => m.IsCustomerAddress);
    groupItems.AddSimpleFor(m => m.IsActive);
    groupItems.AddSimpleFor(m => m.CreatedDate);
    groupItems.AddSimpleFor(m => m.ModifiedDate);
    groupItems.AddSimpleFor(m => m.ModifiedUser);
    groupItems.AddSimpleFor(m => m.Location);
    }));
    cnfg.ShowValidationSummary(true);
    })
    .UseIcons(true)
    .ConfirmDelete(true)
    .AllowAdding(true)
    .AllowUpdating(true)
    .AllowDeleting(true)
    )
    .RemoteOperations(true)
    .Columns(columns => {
    columns.AddFor(m => m.CityRef).Caption("Şehir").Lookup(lookup => lookup
    .DataSource(ds => ds.WebApi().Controller("ApiAddresses").LoadAction("CitiesLookup").Key("Value"))
    .ValueExpr("Value")
    .DisplayExpr("Text")
    );

    columns.AddFor(m => m.CountryRef).Caption("Ülke").Lookup(lookup => lookup
    .DataSource(ds => ds.WebApi().Controller("ApiAddresses").LoadAction("CountriesLookup").Key("Value"))
    .ValueExpr("Value")
    .DisplayExpr("Text")
    );

    columns.AddFor(m => m.TownRef).Caption("İlçe").Lookup(lookup => lookup
    .DataSource(ds => ds.WebApi().Controller("ApiAddresses").LoadAction("TownsLookup").Key("Value"))
    .ValueExpr("Value")
    .DisplayExpr("Text")
    );

    columns.AddFor(m => m.AddressType).Caption("Adres");

    columns.AddFor(m => m.DistrictName).Caption("İlçe Adı");

    columns.AddFor(m => m.IsDefault).Caption("Varsayılan");

    columns.AddFor(m => m.Number).Caption("Numara");

    columns.AddFor(m => m.OwnerRef).Caption("Sahip").Lookup(lookup => lookup
    .DataSource(ds => ds.WebApi().Controller("ApiAddresses").LoadAction("UsersLookup").Key("Value"))
    .ValueExpr("Value")
    .DisplayExpr("Text")
    );

    columns.AddFor(m => m.MainStreet).Caption("Cadde");

    columns.AddFor(m => m.Street).Caption("Sokak");

    columns.AddFor(m => m.PostCode).Caption("Posta Kodu");

    columns.AddFor(m => m.IsCustomerAddress).Caption("Müşteri Adresi Aktiv mi");

    columns.AddFor(m => m.IsActive).Caption("Ativ");

    columns.AddFor(m => m.CreatedDate).Caption("Oluşturulma Tarihi");

    columns.AddFor(m => m.ModifiedDate).Caption("Değiştirilme Tarihi");

    columns.AddFor(m => m.ModifiedUser).Caption("Değiştirilmiş Kullanıcı");

    columns.AddFor(m => m.Location).Caption("Yer");
    })
    )
   
