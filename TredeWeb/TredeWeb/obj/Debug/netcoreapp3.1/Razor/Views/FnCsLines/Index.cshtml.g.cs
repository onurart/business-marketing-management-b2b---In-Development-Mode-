#pragma checksum "C:\Users\saran\Desktop\Web Projerim\TredeWeb\TredeWeb\Views\FnCsLines\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f8b67ce3107c0b3f070f63ce811a268e43194ee0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TredeWeb.Models.FnCsLines.Views_FnCsLines_Index), @"mvc.1.0.view", @"/Views/FnCsLines/Index.cshtml")]
namespace TredeWeb.Models.FnCsLines
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\saran\Desktop\Web Projerim\TredeWeb\TredeWeb\Views\_ViewImports.cshtml"
using TredeWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\saran\Desktop\Web Projerim\TredeWeb\TredeWeb\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f8b67ce3107c0b3f070f63ce811a268e43194ee0", @"/Views/FnCsLines/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5d5c1a0e1929df983dbe05db96aab116c6c1a2c8", @"/Views/_ViewImports.cshtml")]
    public class Views_FnCsLines_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\saran\Desktop\Web Projerim\TredeWeb\TredeWeb\Views\FnCsLines\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<script>
    function onShowing(e) {
        var btns = e.component.content().parent().find("".dx-button.dx-button-has-text"");
        for (var i = 0; i < btns.length; i++) {
            var btn = btns[i];
            $(btn).dxButton(""option"", ""text"", i == 0 ? ""Kaydet"" : ""Vazgeç"");
        }
    }
</script>
");
#nullable restore
#line 15 "C:\Users\saran\Desktop\Web Projerim\TredeWeb\TredeWeb\Views\FnCsLines\Index.cshtml"
Write(Html.DevExtreme().DataGrid<TredeWeb.DataLayer.FnFicheLines>
    ()
    .DataSource(ds => ds.Mvc()
    .Controller("ApiFnFicheLines")
    .LoadAction("Get")
    .InsertAction("Post")
    .UpdateAction("Put")
    .DeleteAction("Delete")
    .Key("Id")
    )
     .ShowBorders(true)
            .ShowColumnLines(true)
            .HighlightChanges(true)
            .Paging(pagination => pagination
                .Enabled(true)
                .PageSize(5)
            )
            .RemoteOperations(true)
            .Editing(e => e
                .Mode(GridEditMode.Popup)
                    .Popup(pop => pop
                        .DragEnabled(false)
                        .OnShowing("onShowing")
                        .Position(PositionAlignment.Center)
                        .Width(700)
                        .Height(800)
                        .Title("Şehir Formu").ShowTitle(true).ShowCloseButton(true).CloseOnOutsideClick(true)
                        )
                .Form(cnfg =>
                {
                    cnfg.Items(itm => itm
                        .AddGroup()
                        .ColCount(2)
                        .ColSpan(2)
                        .Caption("İlk grup")
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.Collect);
                            groupItems.AddSimpleFor(m => m.ModifiedDate);
                            groupItems.AddSimpleFor(m => m.ModifiedUser);
                            groupItems.AddSimpleFor(m => m.LineNr);
                            groupItems.AddSimpleFor(m => m.FinanceRef);
                            groupItems.AddSimpleFor(m => m.Amount);
                            groupItems.AddSimpleFor(m => m.Tax);
                            groupItems.AddSimpleFor(m => m.VatBase);
                            groupItems.AddSimpleFor(m => m.Total);
                            groupItems.AddSimpleFor(m => m.BankRef);
                            groupItems.AddSimpleFor(m => m.BarterRef);
                            groupItems.AddSimpleFor(m => m.CsRef);
                            groupItems.AddSimpleFor(m => m.CashRef);

                        }));
                    cnfg.Items(itm => itm
                        .AddGroup()
                        .ColCount(2)
                        .ColSpan(2)
                        .Caption("İkinci grup")
                        .Items(groupItems =>
                        {

                            groupItems.AddSimpleFor(m => m.Total);
                            groupItems.AddSimpleFor(m => m.BankRef);
                            groupItems.AddSimpleFor(m => m.BarterRef);
                            groupItems.AddSimpleFor(m => m.CreditCardRef);
                            groupItems.AddSimpleFor(m => m.Sign);
                            groupItems.AddSimpleFor(m => m.ModifiedDate);
                            groupItems.AddSimpleFor(m => m.AccountRef);
                            groupItems.AddSimpleFor(m => m.Cost);
                            groupItems.AddSimpleFor(m => m.CardRef);
                            groupItems.AddSimpleFor(m => m.IsActive);
                            groupItems.AddSimpleFor(m => m.CreatedDate);
                            groupItems.AddSimpleFor(m => m.CostRef);
                            groupItems.AddSimpleFor(m => m.OrderLines);

                        }));
                    cnfg.ShowValidationSummary(true);
                })
                .UseIcons(true)
                .ConfirmDelete(true)
                .AllowAdding(true)
                .AllowUpdating(true)
                .AllowDeleting(true)
            )
    .Columns(columns => {

        columns.AddFor(m => m.Collect).Caption("Toplamak");

        columns.AddFor(m => m.ModifiedDate).Caption("Değiştirilme Tarihi");

        columns.AddFor(m => m.ModifiedUser);

        columns.AddFor(m => m.Currency).Caption("Değiştirilmiş Kullanıcı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("CurrenciesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.LineNr).Caption("Satır No.");

        columns.AddFor(m => m.FinanceRef).Caption("Finans Ref").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("FnFichesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.Amount).Caption("Miktar");

        columns.AddFor(m => m.Tax).Caption("Vergi");

        columns.AddFor(m => m.VatBase).Caption("Kazan Tabanı");

        columns.AddFor(m => m.Total).Caption("Toplam");

        columns.AddFor(m => m.BankRef).Caption("Banka Referansı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("FnBankLinesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.BarterRef).Caption("Takas Referansı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("FnBarterLinesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.CsRef).Caption("Cs Ref");

        columns.AddFor(m => m.CashRef).Caption("Nakit Ref").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("FnCashLinesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.CreditCardRef).Caption("Kredi Kartı Referansı");

        columns.AddFor(m => m.Sign).Caption("İşaret");

        columns.AddFor(m => m.ModulEnr).Caption("Modül");

        columns.AddFor(m => m.AccountRef).Caption("Hesap Referansı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("AccountsLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.Cost).Caption("Maliyet");

        columns.AddFor(m => m.CardRef).Caption("Kart Referansı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("CashCardsLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.IsActive).Caption("Aktiif Mi");

        columns.AddFor(m => m.CreatedDate).Caption("Oluşturma Tahiri");

        columns.AddFor(m => m.CostRef).Caption("Maliyet Referansı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("CostsLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );

        columns.AddFor(m => m.OrderRef).Caption("Sipariş Referansı").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("ApiFnFicheLines").LoadAction("OrderLinesLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        );
    }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
